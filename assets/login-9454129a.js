var d=Object.defineProperty;var u=(n,e,t)=>e in n?d(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var c=(n,e,t)=>(u(n,typeof e!="symbol"?e+"":e,t),t);import{U as y,f,t as g}from"./auth_base-f9acc7de.js";const h={attestation:"/v0/admin/attestation",login_init:"/v0/admin/login_init",login_finish:"/v0/admin/login_finish",user_info:"/v0/admin/user_info"};class _ extends y{constructor(t){super(t);c(this,"directory",null)}async loginFinalMsg(t,i){let a=f(t.challenge),s=await globalThis.crypto.subtle.sign({name:"ECDSA",hash:"SHA-384"},i,a);return t.user_info.auth_data=g(s),t}async fetchDirectory(){if(this.directory)return this.directory;try{const t=await fetch(this.discoveryURL,{mode:"cors",cache:"no-store"});if(t.ok){let i=await t.json();this.directory=i.v0}else this.directory=h}catch{this.directory=h}return this.directory}async loginInit(t,i){const a=await this.fetchDirectory();let s=await this.computeOprfClientData(i,t);t.auth_data=s.clientRequestBytes;let o=`${this.baseURL}${a.login_init}`;delete t.salt;let r=await fetch(o,{method:"POST",mode:"cors",cache:"no-store",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return this.parseServerResponse(r)}async loginFinal(t){const i=await this.fetchDirectory(),a=await this.oprfClient.finalize(t.user_info.auth_data,this.oprfClientData),{loginKey:s}=await this.oprfClient.login_key(a,this.oprfClientData.hashed_password),o=await this.loginFinalMsg(t,s),r=JSON.stringify(o);let l=`${this.baseURL}${i.login_finish}`;return(await fetch(l,{method:"POST",mode:"cors",cache:"no-cache",headers:{"Content-Type":"application/json"},body:r})).ok}}async function v(n,e,t,i,a,s){const o=new _(s);let r={domain_name:n,user_name:e,salt:i,auth_algo:a,auth_data:null},l=await o.loginInit(r,t);return o.loginFinal(l)}export{_ as default,v as login_user};
